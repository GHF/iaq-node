---
i2c:
  - id: i2c_bus_0
    sda: 21
    scl: 22
    frequency: 100kHz

  - id: i2c_bus_1
    sda: 17
    scl: 13
    frequency: 100kHz

uart:
  - id: uart_bus_0
    rx_pin: 26
    tx_pin: 27
    baud_rate: 9600
    data_bits: 8
    parity: NONE
    stop_bits: 1

sensor:
  # Aggregated temperature
  - platform: template
    name: "${friendly_shortname} Temperature"
    id: iaq_temperature
    accuracy_decimals: 1
    unit_of_measurement: "°C"
    icon: "mdi:thermometer"
    filters:
      &iaq-aggregate-filters
      - sliding_window_moving_average:
          window_size: 8
          send_every: 2
          send_first_at: 2
      - debounce: 1s

  # Aggregated humidity
  - platform: template
    name: "${friendly_shortname} Humidity"
    id: iaq_humidity
    accuracy_decimals: 1
    unit_of_measurement: "%"
    icon: "mdi:water-percent"
    filters: *iaq-aggregate-filters

  - platform: scd30
    i2c_id: i2c_bus_0
    co2:
      name: "${friendly_shortname} SCD30 CO₂ Concentration"
      id: iaq_scd30_co2
      filters:
        - filter_out: 0  # Sometimes reports zero right after power cycle
        - &scd30-smoothing-filter
          exponential_moving_average:
            alpha: 0.4
            send_every: 5
    temperature:
      name: "${friendly_shortname} SCD30 Temperature"
      id: iaq_scd30_temperature
      filters: [*scd30-smoothing-filter]
      on_value:
        &iaq-temperature-publish
        lambda: id(iaq_temperature).publish_state(x);
      internal: true
    humidity:
      name: "${friendly_shortname} SCD30 Humidity"
      id: iaq_scd30_humidity
      filters: [*scd30-smoothing-filter]
      on_value:
        &iaq-humidity-publish
        lambda: id(iaq_humidity).publish_state(x);
      internal: true
    update_interval: 2s

  # SVM30-J module contains both SGP30 and SHTC1
  - platform: sgp30
    i2c_id: &svm30-i2c-bus i2c_bus_1
    eco2:
      name: "${friendly_shortname} SVM30 eCO₂ Concentration"
      id: iaq_svm30_eco2
      filters:
        &svm30-common-filters
        - exponential_moving_average:
            alpha: 0.2
            send_every: 10
    tvoc:
      name: "${friendly_shortname} SVM30 TVOC Concentration"
      id: iaq_svm30_tvoc
      filters: *svm30-common-filters
    compensation:
      temperature_source: iaq_svm30_temperature
      humidity_source: iaq_svm30_humidity
    update_interval: &svm30-update-interval 1s

  - platform: shtcx
    i2c_id: *svm30-i2c-bus
    temperature:
      name: "${friendly_shortname} SVM30 Temperature"
      id: iaq_svm30_temperature
      filters: *svm30-common-filters
      on_value: *iaq-temperature-publish
      internal: true
    humidity:
      name: "${friendly_shortname} SVM30 Humidity"
      id: iaq_svm30_humidity
      filters: *svm30-common-filters
      on_value: *iaq-humidity-publish
      internal: true
    update_interval: *svm30-update-interval

  - platform: pmsx003
    type: PMSX003
    uart_id: uart_bus_0
    pm_1_0:
      name: "${friendly_shortname} PM <1.0µm Concentration"
      id: iaq_pm_1_0
      filters:
        &pmsx003-common-filters
        - exponential_moving_average:
            alpha: 0.2
            send_every: 10
    pm_2_5:
      name: "${friendly_shortname} PM 1.0–2.5µm Concentration"
      id: iaq_pm_2_5
      filters: *pmsx003-common-filters
    pm_10_0:
      name: "${friendly_shortname} PM 2.5–10.0µm Concentration"
      id: iaq_pm_10_0
      filters: *pmsx003-common-filters

  - platform: tsl2561
    i2c_id: i2c_bus_0
    name: "${friendly_shortname} Ambient Light"
    update_interval: 1s
    on_value:
      then:
        - light.turn_on:
            id: light_display_backlight
            # From "Integrating Ambient Light Sensors with Computers Running
            # Windows 7" whose example data is for a display peaking at 151 nits
            # and outputs into linear backlight duty cycle space.
            # https://download.microsoft.com/download/3/0/2/3027d574-c433-412a-a8b6-5e0a75d5b237/ambient-light-sensors.docx
            # The TTGO T-Display is rated for 400 nits and ESPHome applies gamma
            # correction to make this output in units of perceptual brightness,
            # so this curve only really works by fudgeful accident. The sensor
            # can also read below 1 lux, so such values are clipped.
            brightness: !lambda |-
              return (x > 1254.f) ? 1.f :
                                    0.099323f * log(max(x, 1.f)) + 0.27059f;
